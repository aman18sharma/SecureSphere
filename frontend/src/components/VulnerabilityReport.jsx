import React, {useState} from 'react';
import './VulnerabilityReport.css';

const VulnerabilityReport = (vulnerability) => {
  const [error, setError] = useState('')
  const parseJsonString = (str) => {
    let cleaned = false
    if (!cleaned) {
      try {
        // Remove code block markers
        const cleanedString = str
        .replace(/^```json/, '')  // Remove starting marker
        .replace(/```$/, '')       // Remove ending marker
        .trim();
        cleaned = true
        return JSON.parse(cleanedString);
      } catch (e) {
        setError('Failed to parse JSON: ' + e.message);
        console.log(error)
        return error;
      }
    }
  };

  const reportData = parseJsonString(vulnerability?.vuln_data?.ai_assessment)
  const vulnerabilities = reportData.findings || reportData.vulnerabilities || reportData.findings_table
  const complex_finding_details = reportData.complex_findings || reportData.complex_finding_details
  const references = complex_finding_details['References'] || reportData['references']
  console.log(reportData)
  return (
    <div className="vulnerability-report">
      <header className="report-header">
        <h1>Vulnerability Assessment Report</h1>
        <div className="report-meta">
          <span className="severity-badge high">Score: {reportData.score}</span>
          <br/><br/>
          {/* <span className="report-date">Report Generated: {vulnerability.date_reported}</span> */}
        </div>
      </header>

      <section className="summary-section">
        <h2>Summary</h2>
        <p>{reportData.summary}</p>
      </section>

      <section className="recommendations-section">
        <h2>Weakness</h2>
        <p>{complex_finding_details['Weakness']}</p>
      </section>

      <section className="details-section">
        <h2>Vulnerability Details</h2>
        <div className="vulnerability-table">
          <div className="table-header">
            <div className="header-cell">Field/Context</div>
            <div className="header-cell">Type</div>
            <div className="header-cell">Severity</div>
            <div className="header-cell">Justification</div>
            <div className="header-cell">Recommended Fix</div>
            <div className="header-cell">Standard/Reference</div>
          </div>

          {vulnerabilities.map((row, index) => (
            <div className="table-row" key={index}>
              <div className="data-cell">{row['Field/Key/Context']}</div>
              <div className="data-cell">{row['Vulnerability Type']}</div>
              <div className="data-cell">
                <span className={`severity-indicator ${row.Severity.toLowerCase()}`}>
                  {row.Severity}
                </span>
              </div>
              <div className="data-cell">{row.Justification}</div>
              <div className="data-cell fix-cell">{row['Recommended Fix']}</div>
              <div className="data-cell">{row['Relevant Standard/ Reference']}</div>
            </div>
          ))}
        </div>
      </section>

      <section className="recommendations-section">
        <h2>Affected Software</h2>
        <p>{complex_finding_details['Affected Software']}</p>
      </section>

      <section className="recommendations-section">
        <h2>Potential Mitigations</h2>
        {
          typeof(complex_finding_details['Potential Mitigations']) == 'string' ?
          <p>{complex_finding_details['Potential Mitigations']}</p>
        :
          <ul>
          {
            complex_finding_details['Potential Mitigations'].map((row, index) => (
              <li key={index}>{row}</li>
            ))
          }
          </ul>
        }
      </section>

      <section className="recommendations-section">
        <h2>Related Attack Patterns</h2>
        {
          typeof(complex_finding_details['Related Attack Patterns']) == 'string' ?
          <p>{complex_finding_details['Related Attack Patterns']}</p>
        :
        <ul>
        {
          complex_finding_details['Related Attack Patterns'].map((row, index) => (
            <li key={index}>{row}</li>
          ))
        }
        </ul>
        }
      </section>

      <section className="explanation-section">
        <h2>Technical Explanation</h2>
        <p>{reportData.detailed_explanation}</p>
      </section>

      <footer className="report-footer">
        <div className="footer-section">
          <h3>References</h3>
          <ul>
            {
              references.map((row, index) => (
                <li key={index}><a href={row}>{row}</a></li>
              ))
            }
          </ul>
        </div>
        <div className="footer-section">
          <h3>Report Generated By</h3>
          <p>AI-Powered Vulnerability Assessment System</p>
          <p>Confidential - For Internal Use Only</p>
        </div>
      </footer>
    </div>
  );
};

export default VulnerabilityReport;