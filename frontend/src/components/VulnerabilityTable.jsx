import React, { useEffect, useState } from "react";
import { getVulnerabilities } from "../services/api";
import Button from '@mui/material/Button';

const VulnerabilityTable = () => {
  const [vulnerabilities, setVulnerabilities] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const data = await getVulnerabilities();
        setVulnerabilities(data);
        setLoading(false);
      } catch (error) {
        console.error("Error fetching vulnerabilities:", error);
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  if (loading) return <div className="loading">Loading vulnerabilities...</div>;

  // Calculate summary metrics
  const totalVulnerabilities = vulnerabilities.length;
  const criticalVulnerabilities = vulnerabilities.filter(
    (vuln) => vuln.severity.toLowerCase() === "critical"
  ).length;
  const highVulnerabilities = vulnerabilities.filter(
    (vuln) => vuln.severity.toLowerCase() === "high"
  ).length;

  return (
    <div className="dashboard">
      <h1>Vulnerability Dashboard</h1>

      {/* Summary Cards */}
      <div className="summary-cards">
        <div className="summary-card">
          <h2>Total Vulnerabilities</h2>
          <p>{totalVulnerabilities}</p>
        </div>
        <div className="summary-card">
          <h2>Critical Vulnerabilities</h2>
          <p>{criticalVulnerabilities}</p>
        </div>
        <div className="summary-card">
          <h2>High Vulnerabilities</h2>
          <p>{highVulnerabilities}</p>
        </div>
      </div>

      {/* Vulnerability Table */}
      <div className="vulnerability-table">
        <table>
          <thead>
            <tr>
              <th>CVE ID</th>
              <th>Title</th>
              <th>Severity</th>
              <th>Date Reported</th>
              <th>Actions</th>
            </tr>
          </thead>
          <tbody>
            {vulnerabilities.map((vuln) => (
              <tr
                key={vuln.id}
                className={`severity-${vuln.severity.toLowerCase()}`}
              >
                <td>{vuln.cve_id || "N/A"}</td>

                <td>{vuln.title}</td>
                <td>
                  <span
                    className={`severity-badge ${vuln.severity.toLowerCase()}`}
                  >
                    {vuln.severity}
                  </span>
                </td>
                <td>{new Date(vuln.date_reported).toLocaleDateString()}</td>
                <td>
                  <Button
                    variant="contained"
                    href={`/vulnerability/${vuln.id}`}
                    name="View"
                  >View</Button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};

export default VulnerabilityTable;
